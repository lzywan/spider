#端口号
server.port=8081
#主库
spring.datasource.druid.master.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.master.url=jdbc:mysql://minsu.spider.mdbm.ziroom.com:3306/minsu_spider_db
<<<<<<< HEAD
spring.datasource.druid.master.username=dz_dev
spring.datasource.druid.master.password=ziroom
=======
spring.datasource.druid.master.username=minsu_spider_user
spring.datasource.druid.master.password=fmnQwST0UNoPpBMP
>>>>>>> test
spring.datasource.druid.master.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.master.max-active=10
spring.datasource.druid.master.max-wait=10000
#从库
spring.datasource.druid.slave.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.slave.url=jdbc:mysql://minsu.spider.mdbm.ziroom.com:3306/minsu_spider_db
<<<<<<< HEAD
spring.datasource.druid.slave.username=dz_test
spring.datasource.druid.slave.password=ziroom
=======
spring.datasource.druid.slave.username=minsu_spider_user
spring.datasource.druid.slave.password=fmnQwST0UNoPpBMP
>>>>>>> test
spring.datasource.druid.slave.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.slave.max-active=10
spring.datasource.druid.slave.max-wait=10000

#rabbitMq配置
spring.rabbitmq.host=minsu.mq.ziroom.com
spring.rabbitmq.port=5673
spring.rabbitmq.username=minsu_rabbitmq_write
spring.rabbitmq.password=minsu_rabbitmq_write
spring.rabbitmq.virtual-host=/
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.listener.simple.prefetch=1
spring.rabbitmq.publisher-confirms=true

<<<<<<< HEAD
#开发阶段调试使用
=======
#发送日历事件数据mq
order.lock.mq.name=minsu_order_syncLock

>>>>>>> test
#线程池参数配置
spring.task.pool.corePoolSize = 50
spring.task.pool.maxPoolSize = 100
spring.task.pool.keepAliveSeconds = 3000
spring.task.pool.queueCapacity = 200

<<<<<<< HEAD
#业务数据
synclock.url=http://troy.ziroom.com/spider/ee5f86/getHouseRelate

=======
## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=redis.cluster.ziroom.com
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=30
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=2000
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
## 连接超时时间（毫秒）
spring.redis.timeout=2000

#业务数据
airbnbRelate.url=http://troy.ziroom.com/airbnbRelate/getHouseRelate

#请求地址：发送短信的接口
sms.send.url=http://message.ziroom.com/api/sms/send
#* 每个应用接入消息平台需要针对不同的消息类型申请token。申请token目前方式是说一声（人工的）, 建议新上线短信内容提供模板，确认短信内容是否合适，避免不必要的麻烦（营销类短信很容易被拦截）。 测试token = eoPbfod4Qpq5w-WP7JcVRg
sms.token=HlN9xdjsTdWuvz3fzOUI9g
>>>>>>> test
